{"version":3,"sources":["components/Post.tsx","App.tsx","theme.tsx","index.tsx"],"names":["Post","props","type","onChange","event","changed","value","title","onClick","click","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","ReactDOM","render","ThemeProvider","CssBaseline","useState","id","posts","setPost","showPosts","setShowPosts","buttonStyle","backgroundColor","font","border","padding","cursor","postEditedHandler","postIndex","findIndex","post","target","tempPosts","displayPosts","map","index","tempPost","splice","detelePostHandler","key","Container","maxWidth","Box","my","component","gutterBottom","style","document","querySelector"],"mappings":"qQASe,SAASA,EAAKC,GACzB,OAAO,6BACH,2BAAOC,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAWH,EAAMI,QAAQD,IAAQE,MAAOL,EAAMM,QAC3E,yBAAKC,QAAS,WAAQP,EAAMQ,UAAYR,EAAMM,Q,8NCJtD,SAASG,IACP,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACrD,kBACD,kBAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,4BAA3B,gBAEQ,KACP,IAAIC,MAAOC,cACX,K,6BCKQC,EAjBDC,YAAe,CAC3BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAERE,MAAO,CACLF,KAAMG,IAAIC,MAEZC,WAAY,CACVC,QAAS,WCTfC,IAASC,OACP,kBAACC,EAAA,EAAD,CAAeb,MAAOA,GAEpB,kBAACc,EAAA,EAAD,MACA,mBFUW,WAAgB,IAAD,EACHC,mBAAS,CAChC,CAAEC,GAAI,EAAG5B,MAAO,SAChB,CAAE4B,GAAI,EAAG5B,MAAO,SAChB,CAAE4B,GAAI,EAAG5B,MAAO,WAJU,mBACrB6B,EADqB,KACdC,EADc,OAOMH,oBAAS,GAPf,mBAOrBI,EAPqB,KAOVC,EAPU,KASxBC,EAAc,CAChBC,gBAAiB,QACjB5B,MAAO,QACP6B,KAAM,UACNC,OAAQ,iBACRC,QAAS,MACTC,OAAQ,WASNC,EAAoB,SAAC1C,EAAY+B,GACnC,IAAMY,EAAYX,EAAMY,WAAU,SAAAC,GAAI,OAAIA,EAAKd,KAAOA,KAChDc,E,yWAAI,IAAOb,EAAMW,IACvBE,EAAK1C,MAAQH,EAAM8C,OAAO5C,MAC1B,IAAM6C,EAAS,YAAOf,GACtBe,EAAUJ,GAAaE,EAEvBZ,EAAQc,IAONC,EAAe,KAkBnB,OAjBId,IACFc,EACE,6BACGhB,EAAMiB,KAAI,SAACJ,EAAMK,GAChB,OAAO,kBAACtD,EAAD,CACLK,QAAS,SAACD,GAAD,OAAgB0C,EAAkB1C,EAAO6C,EAAKd,KACvD1B,MAAO,kBA3BO,SAACsC,GACvB,IAAMQ,EAAQ,YAAOnB,GACrBmB,EAASC,OAAOT,EAAW,GAC3BV,EAAQkB,GAwBaE,CAAkBH,IAC/BI,IAAKT,EAAKd,GACVA,GAAIc,EAAKd,GACT5B,MAAO0C,EAAK1C,YAKpBiC,EAAYC,gBAAkB,OAI9B,kBAACkB,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACnD,EAAA,EAAD,CAAYC,QAAQ,KAAKmD,UAAU,KAAKC,cAAY,GAApD,oDAGA,4BAAQC,MAAOzB,EAAahC,QAAS,SAACJ,GA3B1CmC,GAAcD,KA2BV,mFACCc,EACD,kBAAC1C,EAAD,UE1EJ,OAEFwD,SAASC,cAAc,Y","file":"static/js/main.3f8b135e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface post {\r\n    title: string,\r\n    id: number\r\n    click: any,\r\n    changed: any\r\n}\r\n\r\nexport default function Post(props: post) {\r\n    return <div>\r\n        <input type=\"text\" onChange={(event) => props.changed(event)} value={props.title}/>\r\n        <div onClick={() => { props.click() }}>{props.title}</div>\r\n        </div>;\r\n}","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport Post from './components/Post';\nimport { green } from '@material-ui/core/colors';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default function App() {\n  const [posts, setPost] = useState([\n    { id: 1, title: \"POST1\" },\n    { id: 2, title: \"POST2\" },\n    { id: 3, title: \"POST3\" }\n  ]);\n  \n  const [showPosts, setShowPosts] = useState(false);\n\n  let buttonStyle = {\n    backgroundColor: \"green\",\n    color: \"white\",\n    font: \"inherit\",\n    border: \"1px solid blue\",\n    padding: \"8px\",\n    cursor: \"pointer\"\n  };\n\n  let detelePostHandler = (postIndex: number) => {\n    const tempPost = [...posts];\n    tempPost.splice(postIndex, 1);\n    setPost(tempPost);\n  };\n\n  let postEditedHandler = (event: any, id: any) => {\n    const postIndex = posts.findIndex(post => post.id === id);\n    const post = {...posts[postIndex]};\n    post.title = event.target.value;\n    const tempPosts = [...posts];\n    tempPosts[postIndex] = post;\n\n    setPost(tempPosts);\n  };\n  \n  let toggleShowPostsHandler = (event: any) => {\n    setShowPosts(!showPosts);\n  };\n\n  let displayPosts = null;\n  if (showPosts) {\n    displayPosts = (\n      <div>\n        {posts.map((post, index) => {\n          return <Post\n            changed={(event: any) => postEditedHandler(event, post.id)}\n            click={() => detelePostHandler(index)}\n            key={post.id}\n            id={post.id}\n            title={post.title} />;\n        })}\n      </div>\n    );\n\n    buttonStyle.backgroundColor = \"red\";\n  }\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box my={4}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Create React App v4-beta example with TypeScript\n        </Typography>\n        <button style={buttonStyle} onClick={(event) => toggleShowPostsHandler(event)}>Показать посты</button>\n        {displayPosts}\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import red from '@material-ui/core/colors/red';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#556cd6',\r\n    },\r\n    secondary: {\r\n      main: '#19857b',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n  },\r\n});\r\n\r\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);"],"sourceRoot":""}